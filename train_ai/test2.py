import joblib
model = joblib.load("logreg_tfidf_keyword_model.joblib")
import pandas as pd
import re

# ===== ‡∏Ñ‡∏≥‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏´‡∏°‡∏ß‡∏î (‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏£‡∏ô) =====
keywords = {
    # 1Ô∏è‚É£ Template Website ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚Äú‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‚Äù
    1: [
        "template", "‡πÄ‡∏ó‡∏°‡πÄ‡∏û‡∏•‡∏ï", "‡∏°‡∏µ‡πÅ‡∏ö‡∏ö‡πÅ‡∏•‡πâ‡∏ß", "‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡πâ‡∏ô‡πÅ‡∏ö‡∏ö", "‡πÄ‡∏ß‡πá‡∏ö‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á", "‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏î‡∏¥‡∏°",
        "clone layout", "deploy static site", "upload html", "‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏î‡∏¥‡∏°", "convert figma to html", "‡∏ï‡∏≤‡∏°‡πÅ‡∏ö‡∏ö"
    ],

    # 2Ô∏è‚É£ Website Design ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚ÄúVisual Design / ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°‚Äù
    2: [
        "Visual Design", "Color Palette", "Mood Board", "Brand Identity", "Aesthetic",
        "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÄ‡∏ß‡πá‡∏ö‡πÉ‡∏´‡∏°‡πà", "‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö", "‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å", "‡∏õ‡∏£‡∏±‡∏ö‡πÇ‡∏ó‡∏ô‡∏™‡∏µ", "landing page design",
        "rebranding", "mockup", "figma ui", "‡∏õ‡∏£‡∏±‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö", "‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏ß‡∏¢‡∏á‡∏≤‡∏°"
    ],

    # 3Ô∏è‚É£ Website + UX/UI ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚ÄúInteraction / Flow / Testing‚Äù
    3: [
        "UX/UI", "user journey", "flow ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ", "wireframe figma", "prototype", "interaction design",
        "responsive website", "Information Architecture", "Usability Testing", "A/B Testing",
        "user test", "usability", "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö UX", "‡∏î‡∏µ‡πÑ‡∏ã‡∏ô‡πå‡∏£‡∏∞‡∏ö‡∏ö"
    ],

    # 4Ô∏è‚É£ Server API + Docs ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚ÄúBackend Only / Microservice‚Äù
    4: [
        "API", "‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô", "backend", "server", "‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "swagger", "JWT", "RESTful API",
        "express", "node.js", "endpoint", "‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£ API",
        "GraphQL", "Microservices", "Serverless Function", "‡∏á‡∏≤‡∏ô‡∏´‡∏•‡∏±‡∏á‡∏ö‡πâ‡∏≤‡∏ô‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß"
    ],

    # 5Ô∏è‚É£ Full Website + Server ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚Äú‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£ front + back + deploy (End-to-End)‚Äù
    5: [
        "‡πÄ‡∏ß‡πá‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏£‡∏∞‡∏ö‡∏ö", "‡∏Ñ‡∏£‡∏ö frontend backend", "deploy production", "‡∏Ñ‡∏£‡∏ö‡∏ß‡∏á‡∏à‡∏£", "web + api",
        "‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î", "full stack", "maintenance", "security setup", "hosting setup",
        "domain integration", "admin dashboard", "auto backup", "CI/CD Pipeline",
        "DevOps", "End-to-End Solution"
    ],

    # 6Ô∏è‚É£ System Analysis ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚Äú‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå / ‡πÄ‡∏≠‡∏Å‡∏™‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏ö / ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‚Äù (‡πÄ‡∏î‡∏¥‡∏°‡∏î‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
    6: [
        "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏∞‡∏ö‡∏ö", "system analysis", "‡∏≠‡∏≠‡∏Å‡πÅ‡∏ö‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á", "‡∏ú‡∏±‡∏á‡∏á‡∏≤‡∏ô", "SRS", "requirement gathering",
        "ER diagram", "use case", "UML", "architecture plan", "process mapping", "data model", "functional spec",
        "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏£‡∏á‡∏û‡∏¢‡∏≤‡∏ö‡∏≤‡∏•", "‡∏£‡∏∞‡∏ö‡∏ö ERP", "‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏£‡∏á‡πÄ‡∏£‡∏µ‡∏¢‡∏ô", "system design document"
    ],

    # 7Ô∏è‚É£ AI & Data Analysis ‚Äì ‡πÄ‡∏ô‡πâ‡∏ô ‚Äú‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• / ‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ì‡πå / dashboard‚Äù (‡πÄ‡∏î‡∏¥‡∏°‡∏î‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß)
    7: [
        "AI", "machine learning", "data analytics", "dashboard", "data visualization",
        "predictive model", "python analysis", "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•", "data science",
        "sales forecast", "trend analysis", "model training", "business insight",
        "kpi dashboard", "data mining", "forecast system", "‡∏£‡∏∞‡∏ö‡∏ö‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏¢‡∏≠‡∏î‡∏Ç‡∏≤‡∏¢", "‡∏ß‡∏¥‡πÄ‡∏Ñ‡∏£‡∏≤‡∏∞‡∏´‡πå‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡∏õ‡πà‡∏ß‡∏¢"
    ],
}

packages = {
    1: "Template Website",
    2: "Website Design (Visual)",
    3: "Website + UX/UI (Interaction)",
    4: "Server API + Docs (Backend Only)",
    5: "Full Website + Server (End-to-End)",
    6: "System Analysis",
    7: "AI & Data Analysis",
}

def keyword_score(text, keywords):
    scores = []
    for pkg, words in keywords.items():
        count = sum(bool(re.search(w, str(text), re.IGNORECASE)) for w in words)
        scores.append(count)
    return scores

# ==========================================
print("üîπ ‡∏£‡∏∞‡∏ö‡∏ö‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÅ‡∏û‡πá‡∏Å‡πÄ‡∏Å‡∏à‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå")
print("‡∏û‡∏¥‡∏°‡∏û‡πå‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢/‡∏≠‡∏±‡∏á‡∏Å‡∏§‡∏©) ‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î Enter")
print("‡∏û‡∏¥‡∏°‡∏û‡πå 'exit' ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÇ‡∏õ‡∏£‡πÅ‡∏Å‡∏£‡∏°\n")

while True:
    text = input("üìù ‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì: ").strip()
    if text.lower() in ["exit", "quit"]:
        print("üëã ‡∏à‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö ‡∏Ç‡∏≠‡∏ö‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏£‡∏±‡∏ö!")
        break
    if not text:
        print("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡πà‡∏≠‡∏ô\n")
        continue

    # ===== 1Ô∏è‚É£ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì keyword score =====
    kw = keyword_score(text, keywords)

    # ===== 2Ô∏è‚É£ ‡∏™‡∏£‡πâ‡∏≤‡∏á DataFrame ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏≠‡∏ô‡πÄ‡∏ó‡∏£‡∏ô =====
    data = pd.DataFrame([{
        "text": text,
        **{f"kw_{i+1}": kw[i] for i in range(7)}
    }])

    # ===== 3Ô∏è‚É£ ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢ =====
    pred = int(model.predict(data)[0])
    proba = model.predict_proba(data)[0]
    confidence = max(proba) * 100

    print(f"‚Üí ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå: {packages[pred]}")
    print(f"‚Üí ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à: {confidence:.2f}%\n")
